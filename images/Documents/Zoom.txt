Meeting ID: 232 903 8186
Passcode: 4yMsy6

package com.equalsmethod;

import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;

public class Employee implements Comparable<Employee> {

	public Integer empId = 0;
	public String name = null;

	@Override
	public int hashCode() {
		final int prime = 31;  //31 aisa prime number hai jo hmesha unique he hota hai
		int result = 1;
		result = 31 * result + empId;
		result = 31 * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	public Employee(int empId, String name) {
		super();
		this.empId = empId;
		this.name = name;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Employee other = (Employee) obj;
		if (empId != other.empId)
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}

	public static void main(String[] args) {
		Set<Employee> setOfemp = new TreeSet<Employee>();
		Employee e1 = new Employee(1, "C");
		Employee e3 = new Employee(3, "A");
		Employee e2 = new Employee(2, "B");

		setOfemp.add(e1);
		setOfemp.add(e2);
		setOfemp.add(e3);

		setOfemp.forEach(x -> System.out.println("EmpId : " + x.empId + " ::: name : " + x.name));
	}

	@Override
	public int compareTo(Employee o) {

//		if (this.empId > o.empId)
//			return -1;
//		else if (this.empId < o.empId)
//			return 1;
//		else
//			return 0;

		// return this.empId.compareTo(o.empId);

		 //return o.empId.compareTo(this.empId);
		 //return this.name.compareTo(o.name);
		
		return o.name.compareTo(this.name);
	}

}